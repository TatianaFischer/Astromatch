{"version":3,"sources":["components/Styled/Styled.js","components/MatchList/MatchList.js","components/CandidateCard/CandidateCard.js","App.js","serviceWorker.js","index.js"],"names":["ContainerCard","styled","div","ProfilePhoto","img","InfoProfile","Buttons","ButtonX","button","ButtonHeart","ResetButton","ContainerMatchList","ContainerList","MatchCard","PhotoExemple","MatchName","h6","MatchCandidates","useState","matches","setMatches","useEffect","axios","get","then","response","data","catch","error","console","log","getMatch","map","match","src","photo","name","CandidateCard","profile","setProfile","getProfile","choosePerson","value","body","id","choice","post","isMatch","alert","onClick","put","age","bio","ContainerGeral","Header","header","MatchButton","ContainerMatchCandidates","ContainerButtons","App","currentPage","setCurrentPage","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c6ee664d.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\n///////////////////// CANDIDATE CARD COMPONENT :\r\nexport const ContainerCard = styled.div`\r\n  background-color: #ffffff;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  height: 95%;\r\n  box-shadow: grey 1px 1px 5px;\r\n  width: 90%;\r\n  margin-bottom: 10px;\r\n  /* background-color: blue; */\r\n`;\r\nexport const ProfilePhoto = styled.img`\r\n  width: 40vh;\r\n  height: 45vh;\r\n  box-shadow: grey 1px 1px 5px;\r\n  margin-bottom: 0;\r\n  /* background-color: blue; */\r\n`;\r\nexport const InfoProfile = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-height: 110px;\r\n  font-size: 15px;\r\n  /* background-color: blue; */\r\n  width: 35vh;\r\n`;\r\n\r\nexport const Buttons = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  /* background-color: blue; */\r\n  width: 30vh;\r\n  margin-top: 0;\r\n  height: 35px;\r\n`;\r\n\r\nexport const ButtonX = styled.button`\r\n  color: red;\r\n  border-radius: 100%;\r\n  background-color: white;\r\n  border: 1px solid #f5f6f6;\r\n  :hover {\r\n    background-color: #f5f6f6;\r\n  }\r\n  padding: 4px 10px;\r\n  font-size: 20px;\r\n  outline-style: none;\r\n  margin-top: 0;\r\n`;\r\n\r\nexport const ButtonHeart = styled.button`\r\n  color: #16bf00;\r\n  border-radius: 100%;\r\n  background-color: white;\r\n  border: 1px solid #f5f6f6;\r\n  :hover {\r\n    background-color: #f5f6f6;\r\n  }\r\n  padding: 4px 10px;\r\n  font-size: 20px;\r\n  outline-style: none;\r\n`;\r\n\r\nexport const ResetButton = styled.button`\r\n  border-radius: 8px;\r\n  color: red;\r\n  height: 20px;\r\n  margin-right: 10px;\r\n  background-color: white;\r\n  border: 1px solid #f5f6f6;\r\n  :hover {\r\n    background-color: #f5f6f6;\r\n  }\r\n  padding: 4px 10px;\r\n  font-size: 10px;\r\n  outline-style: none;\r\n`;\r\n\r\n///////////////////// MATCH LIST COMPONENT :\r\nexport const ContainerMatchList = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  box-shadow: grey 1px 1px 5px;\r\n  width: 45vh;\r\n  height: 80vh;\r\n  /* background-color: pink; */\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const ContainerList = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: row;\r\n  /* background-color: yellow; */\r\n  justify-content: space-around;\r\n  margin: 3px;\r\n  align-items: center;\r\n`;\r\nexport const MatchCard = styled.div`\r\n  /* border: 2px solid black; */\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  max-height: 80px;\r\n  flex-wrap: wrap;\r\n`;\r\nexport const PhotoExemple = styled.img`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 100%;\r\n`;\r\n\r\nexport const MatchName = styled.h6`\r\n  font-size: 10px;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  ContainerMatchList,\r\n  ContainerList,\r\n  MatchCard,\r\n  PhotoExemple,\r\n  MatchName,\r\n} from \"../Styled/Styled\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default function MatchCandidates() {\r\n  const [matches, setMatches] = useState([]);\r\n\r\n  //mostrar a lista de matches\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        \"https://us-central1-missao-newton.cloudfunctions.net/astroMatch/tatiana/matches\"\r\n      )\r\n      .then((response) => {\r\n        setMatches(response.data.matches);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n  const getMatch = matches.map((match) => {\r\n    return (\r\n      <ContainerList>\r\n        <MatchCard>\r\n          <PhotoExemple src={match.photo} />\r\n          <MatchName>{match.name}</MatchName>\r\n        </MatchCard>\r\n      </ContainerList>\r\n    );\r\n  });\r\n  return <ContainerMatchList>{getMatch}</ContainerMatchList>;\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  ContainerCard,\r\n  ProfilePhoto,\r\n  InfoProfile,\r\n  Buttons,\r\n  ButtonX,\r\n  ButtonHeart,\r\n  ResetButton,\r\n} from \"../Styled/Styled\";\r\n\r\nexport default function CandidateCard() {\r\n  const [profile, setProfile] = useState({});\r\n  const [userChoice, setUserChoice] = useState(null);\r\n\r\n  //mostrar os perfis que podem dar matches\r\n  useEffect(() => {\r\n    getProfile();\r\n  }, []);\r\n\r\n  const getProfile = () => {\r\n    axios\r\n      .get(\r\n        \"https://us-central1-missao-newton.cloudfunctions.net/astroMatch/tatiana/person\"\r\n      )\r\n      .then((response) => {\r\n        setProfile(response.data.profile);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  //se eu der like tem que ver se o usuario tb deu like:\r\n  const choosePerson = (value) => {\r\n    const body = {\r\n      id: profile.id,\r\n      choice: value,\r\n    };\r\n    axios\r\n      .post(\r\n        \"https://us-central1-missao-newton.cloudfunctions.net/astroMatch/tatiana/choose-person\",\r\n        body\r\n      )\r\n      .then((response) => {\r\n        getProfile();\r\n        if (response.data.isMatch === true) {\r\n          alert(\"Deu Match!!!!!\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  //   //resetar todos os perfis\r\n  const resetAllProfiles = () => {\r\n    axios\r\n      .put(\r\n        \"https://us-central1-missao-newton.cloudfunctions.net/astroMatch/tatiana/clear\"\r\n      )\r\n      .then((response) => {\r\n        getProfile();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <ContainerCard>\r\n      <div>\r\n        <ResetButton onClick={resetAllProfiles}>Reset</ResetButton>\r\n      </div>\r\n      <ProfilePhoto src={profile.photo} />\r\n\r\n      <InfoProfile>\r\n        <h4>\r\n          {profile.name} , {profile.age}\r\n          <h6>{profile.bio}</h6>\r\n        </h4>\r\n      </InfoProfile>\r\n      <Buttons>\r\n        <ButtonX onClick={() => choosePerson(false)}>×</ButtonX>\r\n\r\n        <ButtonHeart onClick={() => choosePerson(true)}>♥</ButtonHeart>\r\n      </Buttons>\r\n    </ContainerCard>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\n// import \"./App.css\";\nimport axios from \"axios\";\n\nimport MatchList from \"./components/MatchList/MatchList\";\nimport CandidateCard from \"./components/CandidateCard/CandidateCard\";\nimport styled from \"styled-components\";\n\nconst ContainerGeral = styled.div`\n  display: flex;\n  align-items: center;\n  /* background-color: red; */\n  flex-direction: column;\n  justify-content: center;\n  width: 100vw;\n  height: 100vh;\n`;\n\nconst Header = styled.header`\n  display: flex;\n  height: 40px;\n  justify-content: flex-end;\n  align-items: center;\n  background-color: #be2626;\n  width: 45vh;\n`;\n\nconst MatchButton = styled.button`\n  border-radius: 8px;\n  color: #16bf00;\n  height: 60%;\n  margin-right: 10px;\n  background-color: white;\n  border: 1px solid #f5f6f6;\n  :hover {\n    background-color: #f5f6f6;\n  }\n  padding: 4px 10px;\n  font-size: 12px;\n  outline-style: none;\n`;\n\nconst ContainerMatchCandidates = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  /* background-color: yellow; */\n\n  width: 45vh;\n  height: 85vh;\n  flex-direction: column;\n  box-shadow: grey 1px 1px 5px;\n`;\nconst ContainerButtons = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 150px;\n`;\nexport default function App() {\n  const [currentPage, setCurrentPage] = useState(\"App\");\n  const [profiles, setProfiles] = useState({});\n\n  const changePage = () => {\n    if (currentPage === \"App\") {\n      setCurrentPage(\"matchList\");\n    } else {\n      setCurrentPage(\"App\");\n    }\n  };\n\n  return (\n    <ContainerGeral>\n      <Header>\n        <MatchButton onClick={changePage}>Matches</MatchButton>\n      </Header>\n\n      {currentPage === \"App\" ? (\n        <ContainerMatchCandidates>\n          <CandidateCard></CandidateCard>\n          <ContainerButtons></ContainerButtons>\n        </ContainerMatchCandidates>\n      ) : (\n        <MatchList />\n      )}\n    </ContainerGeral>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}